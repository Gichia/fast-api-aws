name: AWS LAMBDA CI/CD

on:
  # Run tests for any psuh to the main branch
  push:
    branches:
      - "main"

  # Run tests for any PRs.
  pull_request:

jobs:

  # Implement Continous Integration (Run Tests and Create App Artifact if Successful).
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Step 1: Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      # Step 2: Setup Virtual Environment
      - name: Setup Virtual Environment
        run: python -m venv ./venv

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: source ./venv/bin/activate && pip install -r requirements.txt

      # Step 4: Run Tests
      - name: Run Tests
        run: source ./venv/bin/activate && pytest

      # Step 5: Create Archive Of Installed Python Dependencies
      - name: Create Archive Of Installed Python Dependencies
        run: |
          cd ./venv/lib/python3.12/site-packages
          zip -r9 ../../../../api.zip .

      # Step 6: Add APP Files To The Created Archive
      - name: Add APP Files To The Created Archive
        run: cd ./api && zip -g ../api.zip -r .

      # Step 7: Upload Zip File Artifact
      - name: Upload Zip File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-artifact
          path: api.zip

  # Implement Continous Deployment to upload the artifact to AWS S3 bucket and upload to Lambda function
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      # Step 1: Install AWS CLI
      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        # with:
        #   version: 1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Step 2: Download The APP Artifact
      - name: Download The APP Artifact
        uses: actions/download-artifact@v4
        with:
          name: api-artifact

      # Step 3: Upload The APP Artifact To AWS S3
      - name: Upload The APP Artifact To AWS S3
        run: aws s3 cp api.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # Step 4: Deploy To AWS Lambda Function
      - name: Deploy To AWS Lambda Function
        run: |
          aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --s3-bucket ${{ secrets.AWS_S3_BUCKET_NAME }} --s3-key api.zip
          aws lambda update-function-configuration --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --environment "Variables={API_KEY='${{ secrets.API_KEY }}',DB_HOST='${{ secrets.DB_HOST }}'}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}